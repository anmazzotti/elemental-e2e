# This action is a reusable one called by local workflows
name: logs-and-summary
description: 'Add logs and summary for an Elemental E2E test'

# Variables to set when calling this action
inputs:
  k8s_downstream_version:
    default: "Unknown"
    type: string
  k8s_upstream_version:
    default: "Unknown"
    type: string
  node_number:
    default: "Unknown"
    type: string
  operator_version:
    default: "Unknown"
    type: string
  public_fqdn:
    default: "Unknown"
    type: string
  test_type:
    default: "Unknown"
    type: string

runs:
  using: "composite"
  steps:
    - name: Get Epoch time
      id: date
      shell: bash
      run: echo "epoch=$(date +'%s')" >> ${GITHUB_OUTPUT}

    - name: Get logs
      shell: bash
      run: |
        cd tests && (
          # Removing 'downloads' is needed to avoid this error during 'make':
          # 'pattern all: open .../elemental/tests/cypress/downloads: permission denied'
          sudo rm -rf cypress/latest/downloads
          make e2e-get-logs
        )

    - name: Upload logs
      uses: actions/upload-artifact@v4
      with:
        # Use PUBLIC_FQDN to avoid issue with parallel jobs, as it is unique
        name: support-logs-${{ inputs.public_fqdn }}-${{ steps.date.outputs.epoch }}
        path: tests/**/logs/*
        retention-days: 7
        if-no-files-found: ignore

    - name: Add summary
      if: ${{ always() }}
      shell: bash
      run: |
        # Get nodes configuration (use the first one, they are all identical)
        NODE=$(sudo virsh list --name | head -1)
        if [[ -n "${NODE}" ]]; then
          VCPU=$(sudo virsh vcpucount --live ${NODE})
          VMEM=$(sudo virsh dommemstat --live ${NODE} | awk '/^actual/ { print $2 }')
          (( VMEM /= 1048576 ))
        fi

        # Add summary: General informations
        echo "## General informations" >> ${GITHUB_STEP_SUMMARY}
        echo "Bootstrap method: ${BOOTSTRAP_METHOD}" >> ${GITHUB_STEP_SUMMARY}
        if ${{ inputs.test_type == 'cli' }}; then
          echo "Number of nodes in the cluster: ${{ inputs.node_number }}" >> ${GITHUB_STEP_SUMMARY}
        fi
        echo "Type of test: ${{ inputs.test_type }}" >> ${GITHUB_STEP_SUMMARY}

        # Add summary: Elemental
        echo "### Elemental" >> ${GITHUB_STEP_SUMMARY}
        echo "Elemental Operator Image: ${{ inputs.operator_version }}" >> ${GITHUB_STEP_SUMMARY}

        # Add summary: Kubernetes
        echo "### Kubernetes" >> ${GITHUB_STEP_SUMMARY}
        echo "K8s Upstream Version: ${{ inputs.k8s_upstream_version }}" >> ${GITHUB_STEP_SUMMARY}
        echo "K8s Downstream Version: ${{ inputs.k8s_downstream_version }}" >> ${GITHUB_STEP_SUMMARY}

        # Add summary: Cluster
        echo "### Cluster nodes" >> ${GITHUB_STEP_SUMMARY}
        echo "Number of CPU: ${VCPU:-Unknown}" >> ${GITHUB_STEP_SUMMARY}
        echo "Memory size: ${VMEM:-Unknown}GB" >> ${GITHUB_STEP_SUMMARY}